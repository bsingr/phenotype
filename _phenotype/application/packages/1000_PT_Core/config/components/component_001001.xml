<?xml version="1.0" encoding="ISO-8859-1" ?>
<phenotype>
	<meta>
		<ptversion>##!PT_VERSION!##</ptversion>
		<ptsubversion>##!BUILD_NO!##</ptsubversion>	
		<com_id>1001</com_id>
		<com_bez>Richtext</com_bez>		
		<com_rubrik>Text</com_rubrik>
		<com_description>## Component 1001 - Richtext

		This basic component fits many needs of simple web pages. It offers headlines, formatted text, images and links.
		</com_description>
	</meta>
	<script>&#60;?php 
&#47;**
 * Richtext component
 *
 *&#47;
class PhenotypeComponent_1001 extends PhenotypeComponent
{
	var $tool_type = 1001;

	var $bez = &#34;Richtext&#34;;


	&#47;**
	 * With this flag you can turn on and off wether a the editor can distinct between versions of an image
	 * 
	 * @var boolean
	 *&#47;
	public $selectionOfImageVersions = true;


	function setDefaultProperties()
	{
		&#47;&#47; Setting some default values
		$this-&#62;set(&#34;img_id&#34;,0);
		$this-&#62;set(&#34;img_alignment&#34;,&#34;links&#34;); &#47;&#47; unfortunately still in german, meaning &#34;left&#34; ...
		$this-&#62;set(&#34;linktarget&#34;,&#34;_self&#34;);
		$this-&#62;set(&#34;version&#34;,0);
	}

	function edit()
	{
		$this-&#62;form_textfield(&#34;Headline&#34;,&#34;headline&#34;,$this-&#62;get(&#34;headline&#34;));
		echo &#34;&#60;br&#47;&#62;&#34;;
		if ($this-&#62;selectionOfImageVersions)
		{
			$this-&#62;form_image(&#34;&#34;,$this-&#62;getI(&#34;img_id&#34;),-1,1,0,0,$this-&#62;get(&#34;img_alt&#34;),$this-&#62;get(&#34;img_align&#34;),2, $this-&#62;get(&#34;version&#34;));
		}
		else
		{
			$this-&#62;form_image(&#34;&#34;,$this-&#62;getI(&#34;img_id&#34;),-1,1,0,0,$this-&#62;get(&#34;img_alt&#34;),$this-&#62;get(&#34;img_align&#34;),2);
		}
	    ?&#62; 
    	&#60;br&#47;&#62; 
    	&#60;table width=&#34;408&#34; border=&#34;0&#34; cellpadding=&#34;0&#34; cellspacing=&#34;0&#34; class=&#34;tableBausteineBackground&#34;&#62; 
    	&#60;tr&#62;&#60;td nowrap&#62; 
    	&#60;?php 
    	$this-&#62;form_richtext(&#34;text&#34;,$this-&#62;get(&#34;text&#34;),80,16);
    	?&#62; 
    	&#60;&#47;td&#62;&#60;&#47;tr&#62;&#60;&#47;table&#62; &#60;br&#62; 
    	&#60;?php 
    	$this-&#62;form_link(&#34;link&#34;,$this-&#62;get(&#34;linkbez&#34;),$this-&#62;get(&#34;linkurl&#34;),$this-&#62;get(&#34;linktarget&#34;));
    	?&#62;
    	&#60;br&#47;&#62;Link-Anchor: #t&#60;?php echo $this-&#62;id ?&#62;
    	&#60;?php 
	}

	function update()
	{
		&#47;&#47; First do the default property update
		parent::update();
		global $myApp;

		&#47;&#47; Then get the property text, which contains the richtext and filter it
		$richtext = $this-&#62;get(&#34;text&#34;);
		$richtext = $myApp-&#62;richtext_strip_tags($richtext);
		$this-&#62;set(&#34;text&#34;,$richtext);

		&#47;&#47; You can change the filtering by inheriting the method richtext_strip_tags in
		&#47;&#47; your PhenotypeApplication.class (located in _application.inc.php)

		if ($this-&#62;getI(&#34;img_id&#34;)==0)
		{

		}

	}


	function setFullSearch()
	{
		$s = $this-&#62;get(&#34;headline&#34;) . &#34;|&#34; . $this-&#62;get(&#34;text&#34;);
		return ($s);
	}

	function render($context)
	{

		&#47;&#47; Notwendig, um die Smartyengine richtig zu initialisieren
		eval ($this-&#62;initRendering());

		$template = $TPL_DEFAULT;

		switch ($this-&#62;get(&#34;img_align&#34;))
		{
			case &#34;links&#34;:
				$style = &#34;float:left&#34;;
				break;

			case &#34;rechts&#34;:
				$style = &#34;float:right&#34;;
				break;

			case &#34;mittig&#34;:
				$style = &#34;&#34;;
				break;
		}



		if ($this-&#62;get(&#34;img_id&#34;)!=0)
		{
			$alt = $this-&#62;get(&#34;alt&#34;);
			$myImg = new PhenotypeImage($this-&#62;get(&#34;img_id&#34;));
			$myImg-&#62;style = $style;

			$mySmarty-&#62;assign(&#34;image&#34;,$myImg-&#62;render($alt, $this-&#62;get(&#34;version&#34;)));
		}

		$mySmarty-&#62;assign(&#34;headline&#34;,$this-&#62;get(&#34;headline&#34;));
		$mySmarty-&#62;assign(&#34;text&#34;,$this-&#62;get(&#34;text&#34;));
		$mySmarty-&#62;assign(&#34;id&#34;,$this-&#62;id);

		if ($this-&#62;get(&#34;linkurl&#34;)!=&#34;&#34;)
		{
			$link = &#39;&#38;nbsp;&#60;a href=&#34;&#39;.$this-&#62;get(&#34;linkurl&#34;).&#39;&#34; target=&#34;&#39;.$this-&#62;get(&#34;linktarget&#34;).&#39;&#34;&#62;&#39;.$this-&#62;get(&#34;linkbez&#34;).&#39;&#60;&#47;a&#62;&#39;;
			$a= &#39;&#60;a href=&#34;&#39;.$this-&#62;get(&#34;linkurl&#34;).&#39;&#34; target=&#34;&#39;.$this-&#62;get(&#34;linktarget&#34;).&#39;&#34;&#62;&#39;;
			$aa = &#39;&#60;&#47;a&#62;&#39;;
		}
		else
		{
			$link=&#34;&#34;;
			$a=&#34;&#34;;
			$aa=&#34;&#34;;
		}
		$mySmarty-&#62;assign(&#34;a&#34;,$a);
		$mySmarty-&#62;assign(&#34;aa&#34;,$aa);
		$mySmarty-&#62;assign(&#34;link&#34;,$link);

		return $mySmarty-&#62;fetch($template);

	}

}
 ?&#62;</script>
	<templates>
<template access="TPL_DEFAULT">&#60;div class=&#34;richtext&#34;&#62;
&#60;a name=&#34;t{$id}&#34;&#62;&#60;&#47;a&#62;
{if $headline!=&#34;&#34;}&#60;h1&#62;{$a}{$headline}{$aa}&#60;&#47;h1&#62;{&#47;if}
{$a}{$image}{$aa}{$text}{$link}
&#60;&#47;div&#62;
&#60;br clear=&#34;all&#34;&#47;&#62;</template>
   	</templates>
	<componentgroups><group>
			<cog_id>1</cog_id>
			<cog_bez>Default</cog_bez>
			<cog_description>## Default-Bausteingruppe</cog_description>
			<cog_pos>0</cog_pos>
		  </group></componentgroups>
</phenotype>