<?xml version="1.0" encoding="UTF-8" ?>
<phenotype>
	<meta>
		<ext_id>1001</ext_id>
		<ext_bez>Pagewizard</ext_bez>		
		<ext_rubrik>Development</ext_rubrik>
		<ext_description></ext_description>
	</meta>
	<script>&#60;?php 
class PhenotypeExtra_1001 extends PhenotypeExtra
{
	public $id = 1001;
	public $bez = &#34;Pagewizard&#34;;
	public $configure_tab  =0;

	function displaySetup()
	{
	}

	function storeConfig()
	{
		$this-&#62;store();
	}

	function displayInfo()
	{
		global $myLayout;
		 ?&#62;
		&#60;table width=&#34;100%&#34; border=&#34;0&#34; cellpadding=&#34;0&#34; cellspacing=&#34;0&#34;&#62;
        &#60;tr&#62;
        &#60;td class=&#34;tableBody&#34;&#62;
        The pagewizard is a mighty helper extra for creating pages.&#60;br&#47;&#62;
        You can create whole page trees very simple by writing them down.&#60;br&#47;&#62;
        
        Just write down page titles in a list, one line for each page.&#60;br&#47;&#62;
        With spaces you can determine the level of a page, i.e. you can create child pages.&#60;br&#47;&#62;
        &#60;br&#47;&#62;
        Example: &#60;br&#47;&#62;
        Home&#60;br&#47;&#62;
        &#38;nbsp;Page 1&#60;br&#47;&#62;
        &#38;nbsp;Page 2&#60;br&#47;&#62;
        &#38;nbsp;&#38;nbsp;Page 2.1&#60;br&#47;&#62;
        &#38;nbsp;Page 3&#60;br&#47;&#62;
        &#60;br&#47;&#62;
        &#60;br&#47;&#62;
        You must determine layout and online status for all pages. But you can override your global settings for single pages:&#60;br&#47;&#62;
 		&#60;br&#47;&#62;	
        Example: &#60;br&#47;&#62;
        Page 1 || 6 0&#60;br&#47;&#62;
        Page 2 || 4 1&#60;br&#47;&#62;
        Page 3&#60;br&#47;&#62;
        Page 4&#60;br&#47;&#62;
        &#60;br&#47;&#62;
         In this example &#34;Page 1&#34; gets the layout with id 6, &#34;Page 2&#34; gets layout with id 4.&#60;br&#47;&#62;
        &#34;Page 1&#34; is offline after creation, &#34;Page 2&#34; online. Page 3 and 4 gets selected default values.&#60;br&#47;&#62;
        &#60;br&#47;&#62;
        &#60;&#47;td&#62;
        &#60;&#47;tr&#62;
        &#60;&#47;table&#62;
        &#60;?php 

	}
	function displayStart()
	{
		global $myLayout;
		global $myPT;
		global $myDB;

		$myLayout-&#62;workarea_start_draw();
		 ?&#62;
		&#60;form action=&#34;extra_execute.php&#34; method=&#34;post&#34;&#62;
		&#60;input type=&#34;hidden&#34; name=&#34;id&#34; value=&#34;&#60;?php echo $this-&#62;id ?&#62;&#34;&#62;
		&#60;?php 

		$sql = &#34;SELECT * FROM pagegroup ORDER BY grp_bez&#34;;
		$rs = $myDB-&#62;query($sql);
		$options = &#34;&#34;;
		$options .= &#39;&#60;option value=&#34;0&#34;&#62;--------------------------------&#60;&#47;option&#62;&#39;;
		while ($row = mysql_fetch_array($rs))
		{
			$options .= &#39;&#60;option value=&#34;g&#39;.$row[&#34;grp_id&#34;].&#39;&#34;&#62;Group: &#39;.$row[&#34;grp_bez&#34;].&#39;&#60;&#47;option&#62;&#39;;
		}
		$sql = &#34;SELECT * FROM page ORDER BY grp_id,pag_bez&#34;;
		$rs = $myDB-&#62;query($sql);
		$grp_id = 0;
		while ($row = mysql_fetch_array($rs))
		{
			if ($row[&#34;grp_id&#34;] != $grp_id)
			{
				$grp_id = $row[&#34;grp_id&#34;];
				$options .= &#39;&#60;option value=&#34;0&#34;&#62;--------------------------------&#60;&#47;option&#62;&#39;;
			}
			$options .= &#39;&#60;option value=&#34;&#39;.$row[&#34;pag_id&#34;].&#39;&#34;&#62;&#39;.$row[&#34;pag_bez&#34;].&#39;&#60;&#47;option&#62;&#39;;
		}
		$options .= &#39;&#60;option value=&#34;0&#34;&#62;--------------------------------&#60;&#47;option&#62;&#39;;

		$html = $myLayout-&#62;workarea_form_select(&#34;&#34;, &#34;pag_id&#34;, $options, $x);
		$myLayout-&#62;workarea_row_draw(&#34;Reference page&#34;, $html);

		$_options = Array (1 =&#62; &#34;after selected page, same level&#34;, 2 =&#62; &#34;before selected page, same level&#34;, 3 =&#62; &#34;below selected page, one level deeper (new child page)&#34;);
		$options = $myPT-&#62;buildOptionsByNamedArray($_options, &#34;&#34;);
		$html = $myLayout-&#62;workarea_form_select(&#34;&#34;, &#34;insertorder&#34;, $options, $x);
		$myLayout-&#62;workarea_row_draw(&#34;Settings&#34;, $html);

		$sql = &#34;SELECT * FROM layout ORDER BY lay_bez&#34;;
		$rs = $myDB-&#62;query($sql);
		$_options = Array ();
		$_options[] = &#34;no template&#34;;
		while ($row = mysql_fetch_array($rs))
		{
			$_options[$row[&#34;lay_id&#34;]] = $row[&#34;lay_id&#34;].&#34;: &#34;.$row[&#34;lay_bez&#34;];
		}
		$options = $myPT-&#62;buildOptionsByNamedArray($_options, &#34;&#34;);
		$html = $myLayout-&#62;workarea_form_select(&#34;&#34;, &#34;lay_id&#34;, $options, $x);
		$myLayout-&#62;workarea_row_draw(&#34;Layout&#34;, $html);

		$html = $myLayout-&#62;workarea_form_checkbox(&#34;&#34;, &#34;online&#34;, 1, online);
		$myLayout-&#62;workarea_row_draw(&#34;Status&#34;, $html);

		$html = $myLayout-&#62;workarea_form_textarea(&#34;&#34;, &#34;tree&#34;, &#34;&#34;, 20, 395);
		$myLayout-&#62;workarea_row_draw(&#34;Page tree&#34;, $html);

		$myLayout-&#62;workarea_whiteline();
 ?&#62;
			 &#60;table width=&#34;100%&#34; border=&#34;0&#34; cellpadding=&#34;0&#34; cellspacing=&#34;0&#34;&#62;
          &#60;tr&#62;
            &#60;td class=&#34;windowFooterWhite&#34;&#62;&#38;nbsp;&#60;&#47;td&#62;
            &#60;td align=&#34;right&#34; class=&#34;windowFooterWhite&#34;&#62;
			&#38;nbsp;&#38;nbsp;&#60;input name=&#34;save&#34; type=&#34;submit&#34; class=&#34;buttonWhite&#34; style=&#34;width:102px&#34;value=&#34;Start&#34;&#62;&#38;nbsp;&#38;nbsp;
            &#60;&#47;td&#62;
          &#60;&#47;tr&#62;
        &#60;&#47;table&#62;
        &#60;&#47;form&#62;
		&#60;?php 


		$myLayout-&#62;workarea_stop_draw();
	}

	function execute($myRequest)
	{
		global $myLayout;
		$myLayout-&#62;workarea_start_draw();
	    ?&#62;
	    &#60;table width=&#34;100%&#34; border=&#34;0&#34; cellpadding=&#34;0&#34; cellspacing=&#34;0&#34;&#62;
        &#60;tr&#62;
        &#60;td class=&#34;tableBody&#34;&#62;
        &#60;?php 
        $this-&#62;buildPages();
		 ?&#62;
		&#60;&#47;td&#62;
          &#60;&#47;tr&#62;
        &#60;&#47;table&#62;
		&#60;?php 
		$myLayout-&#62;workarea_whiteline();
		$myLayout-&#62;workarea_stop_draw();
	}

	function buildPages()
	{
		global $myRequest;
		global $myDB;
		global $myPT;

		$pag_id = $myRequest-&#62;get(&#34;pag_id&#34;);

		&#47;&#47; Array aufbauen

		$lastlevel=0;

		$s = $myRequest-&#62;get(&#34;tree&#34;);
		$_tree= Array();
		$s =explode(&#34;\n&#34;,$s);
		$i=0;
		foreach ($s as $k)
		{
			$i++;
			$lay_id = $myRequest-&#62;getI(&#34;lay_id&#34;);
			$status = $myRequest-&#62;getI(&#34;online&#34;);
			$k = str_replace (chr(10),&#34;&#34;,$k);
			$k = str_replace (chr(13),&#34;&#34;,$k);
			$level = 0;
			while (substr($k,$level,1)==&#34; &#34;)
			{
				$level++;
			}
			$k = trim($k);
			$p = strpos($k,&#34;||&#34;);
			if ($p!==false)
			{
				$params = substr($k,$p+2);
				$params = trim($params);
				$k = substr($k,0,$p);

				$p = strpos($params,&#34; &#34;);
				if ($p!==false)
				{
					$lay_id = (int)substr($params,0,$p);
					$status = (int)substr($params,$p+1);
				}
				else
				{
					$lay_id = (int)$params;
				}
			}
			if ($k!=&#34;&#34;)
			{

				&#47;&#47; Korrigiert unm�gliche Baumstrukturen
				if ($level&#62;$lastlevel+1)
				{
					$level=$lastlevel+1;
				}
				if ($i==1)
				{
					$level=0;
				}
				&#47;&#47; -- Unm�gliche Baumstrukturen

				$_tree[] = Array($level,$k,$lay_id,$status);
				$lastlevel=$level;
			}
		}



		$_parents = Array();
		$lastlevel=0;
		$push=0;
		$n=0;
		$c=count($_tree);
		for ($i=0;$i&#60;$c;$i++)
		{
			$_page = $_tree[$i];
			$level = $_page[0];
			$bez = $_page[1];
			$lay_id = $_page[2];
			$status = $_page[3];
			$insertorder = 1; &#47;&#47; nach der letzten Seite

			&#47;&#47; Erste Seite ermitteln
			if ($i==0)
			{
				if (strpos($pag_id,&#34;g&#34;)===0)
				{
					$grp_id = (int)substr($pag_id,1);

					&#47;&#47; Check, ob in der Gruppe schon Seiten sind !!
					$sql = &#34;SELECT * FROM page WHERE grp_id = &#34; . $grp_id . &#34; AND pag_id_top=0 ORDER BY pag_pos DESC&#34;;
					$rs = $myDB-&#62;query($sql);
					if (mysql_num_rows($rs)==0)
					{
						$_parents[] = 0;
						$insertorder = 3;
					}
					else
					{
						$row = mysql_fetch_array($rs);
						$_parents[] = $row[&#34;pag_id&#34;];
						$insertorder = 1;
					}
				}
				else
				{
					&#47;&#47; Abfangen pag_id=0;
					if ($myRequest-&#62;getI(&#34;pag_id&#34;)==0)
					{
						echo &#34;You must choos either a page or a pagegroup.&#34;;
						return false;
					}

					$grp_id =NULL;
					$_parents[] = $myRequest-&#62;getI(&#34;pag_id&#34;);
					$insertorder = $myRequest-&#62;getI(&#34;insertorder&#34;);
				}
			}

			&#47;&#47; -- Erste Seite ermitteln
			if ($level&#62;$lastlevel)
			{
				$insertorder = 3;
			}
			$downgrade=0;
			if ($level&#60;$lastlevel)
			{
				$n=$i;
				while ($n&#62;0)
				{
					$n--;
					$backlevel = $_tree[$n][0];
					if ($backlevel==$level)
					{
						break;
					}
					$downgrade++;
				}
			}

			$c2 = count($_parents);
			$pag_id_parent = $_parents[$c2-1-$downgrade];

			echo &#34;Page &#60;strong&#62;&#34; . $bez . &#34;&#60;&#47;strong&#62; created.&#60;br&#47;&#62;&#34;;

			$myPage = new PhenotypePage();
			if ($pag_id_parent==0)
			{
				$id = $myPage-&#62;newPage_FirstInGroup($grp_id);
			}
			else
			{
				$id = $myPage-&#62;newPage_RelatedToExisitingPage($pag_id_parent,$insertorder);
			}

			$_parents[] = $id;
			$lastlevel=$level;

			$myPage-&#62;init($id);

			$mySQL = new SQLBuilder();
			$mySQL-&#62;addField(&#34;pag_bez&#34;,$bez);
			$mySQL-&#62;addField(&#34;pag_titel&#34;,$bez);
			$mySQL-&#62;addField(&#34;pag_status&#34;,$status);

			$sql = $mySQL-&#62;update(&#34;page&#34;,&#34;pag_id=&#34;.$myPage-&#62;id);
			$myDB-&#62;query($sql);

			$mySQL = new SQLBuilder();
			$mySQL-&#62;addField(&#34;lay_id&#34;,$lay_id);
			$sql = $mySQL-&#62;update(&#34;pageversion&#34;,&#34;ver_id=&#34;.$myPage-&#62;ver_id);
			$myDB-&#62;query($sql);

			$myPage-&#62;buildProps();


		}

		&#47;&#47; Rebuild urls of all pages
		$sql = &#34;SELECT pag_id FROM page&#34;;
		$rs = $myDB-&#62;query($sql);
		while ($row=mysql_fetch_array($rs))
		{
			$myPage = new PhenotypePage($row[&#34;pag_id&#34;]);
			&#47;&#47;echo $myPage-&#62;smarturl_schema;
			$myPage-&#62;rebuildURLs($false,$true);
		}
	}

}
 ?&#62;</script>
	<templates>
   	</templates>
		<ext_props></ext_props>
</phenotype>